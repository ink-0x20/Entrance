using UnityEngine;

using Entrance.Common;
using Entrance.Model;
using Entrance.View;

using UniRx;

namespace Entrance.Prezenter
{
    public class SelectDifficultPrezenter : BaseScreenPrezenter
    {
        // **************************************************
        // View
        // **************************************************
        [SerializeField]
        private SelectDifficultView selectDifficultView = default;

        // **************************************************
        // Model
        // **************************************************
        private SelectDifficultModel selectDifficultModel = new SelectDifficultModel();

        // ********************************************************************************
        // 初期化時に呼ばれます
        // ********************************************************************************
        public override void Initialize()
        {
            // ********************************************************************************
            // Viewの初期化（UIをアニメーション前の状態にする）
            // ********************************************************************************
            selectDifficultModel.Initialize(sessionCommon);
            selectDifficultView.Initialize(sessionCommon);

            // ********************************************************************************
            // 追加で生成するべきUIパーツの生成と配置
            // ********************************************************************************

            // ********************************************************************************
            // Bind処理（Modelの値の変更の監視設定）
            // ********************************************************************************
            // 難易度管理番号
            selectDifficultModel.DifficultNumber
                .Subscribe(selectDifficultView.SelectDifficult)
                .AddTo(gameObject);
            // 難易度リスト
            selectDifficultModel.DifficultList
                .Subscribe(selectDifficultView.SetDifficulyList)
                .AddTo(gameObject);

            // ********************************************************************************
            // SetEvents処理（Viewのイベントの監視設定）
            // ********************************************************************************
            // 難易度選択イベント
            selectDifficultView.selectDifficultListener1 = () => selectDifficultModel.SelectDifficult(1);
            selectDifficultView.selectDifficultListener2 = () => selectDifficultModel.SelectDifficult(2);
            selectDifficultView.selectDifficultListener3 = () => selectDifficultModel.SelectDifficult(3);
            selectDifficultView.selectDifficultListener4 = () => selectDifficultModel.SelectDifficult(4);
            selectDifficultView.selectDifficultListener5 = () => selectDifficultModel.SelectDifficult(5);
            // 難易度決定イベント
            selectDifficultView.decideListener = () =>
            {
                // 難易度を設定
                sessionCommon.DifficultyType = selectDifficultModel.DifficultyType;
                // 次画面へ遷移
                screenDataLinkage.Value = new ScreenDataLinkage(ScreenList.SelectPreparationScreen, sessionCommon);
            };
            // キャンセルイベント
            selectDifficultView.cancelListener = () =>
            {
                // 次画面へ遷移
                screenDataLinkage.Value = new ScreenDataLinkage(ScreenList.SelectMusicScreen, sessionCommon);
            };

            // ********************************************************************************
            // 画面の描画に必要な追加通信
            // ********************************************************************************
        }

        // ********************************************************************************
        // OnScreenOepnの直前に呼ばれます
        // ********************************************************************************
        public override void OnScreenOepnBefore()
        {
            // ********************************************************************************
            // InitializeとOnScreenOepnBeforeの間で、前のScreenからパラメータが必要に応じて渡されてきています。
            // ********************************************************************************

            // ********************************************************************************
            // ここでは、初期化後に渡されたパラメータに応じて、画面が表示される前に済ませておきたい処理を行う
            // ********************************************************************************

            // ********************************************************************************
            // 渡されたパラメータをModelに適応
            // ********************************************************************************

            // ********************************************************************************
            // 渡されたパラメータに依存した追加UI生成
            // ********************************************************************************

            // ********************************************************************************
            // 渡されたパラメータに依存した追加通信
            // ********************************************************************************
        }

        // ********************************************************************************
        // 自身に遷移してくる際に呼ばれます
        // ********************************************************************************
        public override void OnScreenOepn()
        {
            // ********************************************************************************
            // UIを表示するアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // OnScreenOepnの直後に呼ばれます
        // ********************************************************************************
        public override void OnScreenOepnAfter()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }

        // ********************************************************************************
        // 次のScreenに遷移する際に呼ばれます
        // ********************************************************************************
        public override void OnScreenChange()
        {
            // ********************************************************************************
            // UIを非表示にするアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // 前のScreenに戻る際に読まれます
        // ********************************************************************************
        public override void OnScreenBackSrc()
        {
            // ********************************************************************************
            // UIを非表示にするアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // OnScreenBackDstの直前に呼ばれます
        // ********************************************************************************
        public override void OnScreenBackDstBefore()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }

        // ********************************************************************************
        // 戻るによって自身に遷移してくる際に呼ばれます
        // ********************************************************************************
        public override void OnScreenBackDst()
        {
            // ********************************************************************************
            // UIを表示するアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // 自身を管理しているWindowが閉じる際に呼ばれます
        // ********************************************************************************
        public override void OnWindowClose()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }

        // ********************************************************************************
        // Androidバックキーが押された際に呼ばれます
        // ********************************************************************************
        public override void AndroidBack()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }
    }
}
