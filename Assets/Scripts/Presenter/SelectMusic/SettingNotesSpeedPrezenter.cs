using UnityEngine;

using Entrance.Common;
using Entrance.Model;
using Entrance.Utils;
using Entrance.View;

using UniRx;

namespace Entrance.Prezenter
{
    public class SettingNotesSpeedPrezenter : BaseScreenPrezenter
    {
        // **************************************************
        // View
        // **************************************************
        [SerializeField]
        private SettingNotesSpeedView settingNotesSpeedView = default;

        // **************************************************
        // Model
        // **************************************************
        private SettingNotesSpeedModel settingNotesSpeedModel = new SettingNotesSpeedModel();

        // ********************************************************************************
        // 初期化時に呼ばれます
        // ********************************************************************************
        public override void Initialize()
        {
            // ********************************************************************************
            // Viewの初期化（UIをアニメーション前の状態にする）
            // ********************************************************************************
            settingNotesSpeedModel.Initialize(sessionCommon);
            settingNotesSpeedView.Initialize(sessionCommon);

            // ********************************************************************************
            // 追加で生成するべきUIパーツの生成と配置
            // ********************************************************************************

            // ********************************************************************************
            // Bind処理（Modelの値の変更の監視設定）
            // ********************************************************************************
            // 設定管理番号
            settingNotesSpeedModel.SettingNumber
                .Subscribe(settingNotesSpeedView.SelectSetting)
                .AddTo(gameObject);
            // ノーツスピード
            settingNotesSpeedModel.NotesSpeed
                .Subscribe(settingNotesSpeedView.SetNotesSpeed)
                .AddTo(gameObject);

            // ********************************************************************************
            // SetEvents処理（Viewのイベントの監視設定）
            // ********************************************************************************
            // 設定選択イベント
            settingNotesSpeedView.selectSettingListener1 = () => settingNotesSpeedModel.SelectSetting(1);
            settingNotesSpeedView.selectSettingListener2 = () => settingNotesSpeedModel.SelectSetting(2);
            settingNotesSpeedView.selectSettingListener3 = () => settingNotesSpeedModel.SelectSetting(3);
            settingNotesSpeedView.selectSettingListener4 = () => settingNotesSpeedModel.SelectSetting(4);
            settingNotesSpeedView.selectSettingListener5 = () => settingNotesSpeedModel.SelectSetting(5);
            // 設定決定イベント
            settingNotesSpeedView.decideListener = () =>
            {
                switch (settingNotesSpeedModel.SettingNumber.Value)
                {
                    case 1:
                        if (sessionCommon.NotesSpeed != settingNotesSpeedModel.NotesSpeed.Value)
                        {
                            // ノーツスピードを保存
                            sessionCommon.NotesSpeed = settingNotesSpeedModel.NotesSpeed.Value;
                            // セッションをサーバーへ保存
                            DataStoreUtils.SaveSession(sessionCommon);
                        }
                        // 次画面へ遷移
                        screenDataLinkage.Value = new ScreenDataLinkage(ScreenList.SelectPreparationScreen, sessionCommon);
                        break;
                    case 2:
                        // ノーツスピードを設定
                        settingNotesSpeedModel.SetNotesSpeed();
                        break;
                    case 3:
                        // ノーツスピードを設定
                        settingNotesSpeedModel.SetNotesSpeed();
                        break;
                    case 4:
                        // ノーツスピードを設定
                        settingNotesSpeedModel.SetNotesSpeed();
                        break;
                    case 5:
                        // ノーツスピードを設定
                        settingNotesSpeedModel.SetNotesSpeed();
                        break;
                }
            };
            // キャンセルイベント
            settingNotesSpeedView.cancelListener = () =>
            {
                // 次画面へ遷移
                screenDataLinkage.Value = new ScreenDataLinkage(ScreenList.SelectPreparationScreen, sessionCommon);
            };

            // ********************************************************************************
            // 画面の描画に必要な追加通信
            // ********************************************************************************
        }

        // ********************************************************************************
        // OnScreenOepnの直前に呼ばれます
        // ********************************************************************************
        public override void OnScreenOepnBefore()
        {
            // ********************************************************************************
            // InitializeとOnScreenOepnBeforeの間で、前のScreenからパラメータが必要に応じて渡されてきています。
            // ********************************************************************************

            // ********************************************************************************
            // ここでは、初期化後に渡されたパラメータに応じて、画面が表示される前に済ませておきたい処理を行う
            // ********************************************************************************

            // ********************************************************************************
            // 渡されたパラメータをModelに適応
            // ********************************************************************************

            // ********************************************************************************
            // 渡されたパラメータに依存した追加UI生成
            // ********************************************************************************

            // ********************************************************************************
            // 渡されたパラメータに依存した追加通信
            // ********************************************************************************
        }

        // ********************************************************************************
        // 自身に遷移してくる際に呼ばれます
        // ********************************************************************************
        public override void OnScreenOepn()
        {
            // ********************************************************************************
            // UIを表示するアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // OnScreenOepnの直後に呼ばれます
        // ********************************************************************************
        public override void OnScreenOepnAfter()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }

        // ********************************************************************************
        // 次のScreenに遷移する際に呼ばれます
        // ********************************************************************************
        public override void OnScreenChange()
        {
            // ********************************************************************************
            // UIを非表示にするアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // 前のScreenに戻る際に読まれます
        // ********************************************************************************
        public override void OnScreenBackSrc()
        {
            // ********************************************************************************
            // UIを非表示にするアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // OnScreenBackDstの直前に呼ばれます
        // ********************************************************************************
        public override void OnScreenBackDstBefore()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }

        // ********************************************************************************
        // 戻るによって自身に遷移してくる際に呼ばれます
        // ********************************************************************************
        public override void OnScreenBackDst()
        {
            // ********************************************************************************
            // UIを表示するアニメーションの再生
            // ********************************************************************************
        }

        // ********************************************************************************
        // 自身を管理しているWindowが閉じる際に呼ばれます
        // ********************************************************************************
        public override void OnWindowClose()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }

        // ********************************************************************************
        // Androidバックキーが押された際に呼ばれます
        // ********************************************************************************
        public override void AndroidBack()
        {
            // ********************************************************************************
            // 特になし
            // ********************************************************************************
        }
    }
}
